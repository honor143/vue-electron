<template>
    <div class="bond-info padtop5 padright5">
        <div class="left-container tree-wrapper">
            <div style="margin-top: 6px">
                <Input size="small" :value="bondshortname" placeholder="债券简称" style="width: auto" clearable>
                    <Icon type="ios-search" slot="prefix" />
                </Input>
            </div>
            <div>
                <h3 style="margin-top:10px;">投标债券列表</h3>
                <div  class="align-left">
                    <Tree ref="bondList" :data="bondlist" @on-select-change="getSelectedTreeItem"></Tree>
                </div>                   
            </div>
        </div>
        <div class="right-container">
            <div class="dis-flex">
                <div class="childone">
                    <div class="sec-header">
                        <!-- <h3>债券发行信息</h3><span style="margin-left:20px;">{{selectedbond}}</span> -->
                        <h3>债券发行信息</h3>
                        <!-- <div class="right-wrapper">
                            <Button class="marbot5" size="small" type="primary" @click="clearBondDetailFilter" v-if="">清空过滤</Button>
                            <Button class="marbot5" size="small" type="primary" @click="selectBondDetail" v-if="">查询</Button>
                            <Button class="marbot5" size="small" type="primary" @click="editBondDetail" v-if="">编辑</Button>
                            <a href="#">明细</a>
                        </div> -->
                    </div>
                    <div class="marbot5">
                            <Table class="table-height" stripe highlight-row 
                            :loading="detailLoading" height="112" 
                            :columns="detailColumns" :data="detailData">
                        </Table>
                    </div>
                </div>
                <div>
                    <div class="sec-header" style="padding-left:5px;">
                        <!-- <h3>债项评级<span>更多</span></h3> -->
                        <h3>债项评级</h3>
                    </div>
                    <div class="bond-detail card-bg" style="height:112px;">
                        <p><span>外部评级</span><b :title="bondDetail.vcCreditRating">{{bondDetail.vcCreditRating}}</b></p>
                        <p><span>评级机构</span><b :title="bondDetail.vcRatingOrgan">{{bondDetail.vcRatingOrgan}}</b></p>
                        <p><span>内部评级</span><b :title="bondDetail.vcCreditRatingTk">{{bondDetail.vcCreditRatingTk}}</b></p>
                        <p><span>内部评级人</span><b :title="bondDetail.vcRatingOrganTk">{{bondDetail.vcRatingOrganTk}}</b></p>
                        <p><span>是否初评</span><b :title="bondDetail.vcPrimaryRating">{{bondDetail.vcPrimaryRating}}</b></p>
                        <p><span>备选库</span><b :title="bondDetail.vcPoolname">{{bondDetail.vcPoolname}}</b></p>
                        <p><span>推荐星级</span><b :title="bondDetail.vcStarLevel">{{bondDetail.vcStarLevel}}</b></p>
                        <p><span>推荐价格范围</span><b :title="bondDetail.vcAdviceRate">{{bondDetail.vcAdviceRate}}</b></p>
                        <p><span>最低价格</span><b :title="bondDetail.vcFloorPrice">{{bondDetail.vcFloorPrice}}</b></p>
                        <p><span>能否超最低价</span><b :title="bondDetail.vcOutLowestPrice">{{bondDetail.vcOutLowestPrice}}</b></p>
                    </div> 
                </div> 
            </div>           
            <div class="dis-flex">
                <div>
                    <div class="sec-header">
                        <h3>中标结果维护</h3>
                        <div class="right-wrapper">
                            <!-- <Button size="small" type="primary" @click="editFirBidAmount">编辑首轮中标量</Button>
                            <Button size="small" type="primary" @click="editAddBidAmount">编辑追加中标量</Button> -->
                            <Button size="small" type="primary" v-if="userButtonRoles.selectMarket_12_9" @click="adjMarket">调整市场</Button>
                            <Button size="small" type="primary" v-if="lAddCount==0 && userButtonRoles.updateLotPrice_11_11" @click="editBidPrice">编辑中标价格</Button>
                            <Button size="small" type="primary" v-if="userButtonRoles.updateBondBiddingResult_12_13" @click="editBidAmount">编辑中标量</Button>
                            <Button size="small" type="primary" :loading="autoDisLoading" v-if="userButtonRoles.automaticallyAssigned_12_1" @click="autoDis">自动分配</Button>
                        </div>
                    </div>
                    <div class="marbot5">
                        <Table class="table-height table-footer" stripe highlight-row 
                            :loading="mtainLoading" height="152" 
                            :columns="mtainColumns" :data="mtainData"
                            @on-current-change="highLightMtainTable"
                            >
                            <slot name="footer" slot="footer" style="height:30px;">
                                <Table
                                    height="30"
                                    :show-header="false" 
                                    :columns="mtainSumColumns" :data="mtainSumData" 
                                    style="line-height:30px;"
                                    >
                                </Table>
                            </slot>
                        </Table>
                        <!-- <Table stripe highlight-row 
                            height="30"
                            :show-header="false" 
                            :columns="mtainSumColumns" :data="mtainSumData" 
                            >
                        </Table> -->
                        <!-- <Page size="small" :total="totalSizeMtain" :current="pageNumMtain" @on-page-size-change="pageSizeChangeMtain" @on-change="pageNumChangeMtain"
                            :page-size="pageSizeMtain" :page-size-opts="pageOptsMtain" show-total show-elevator show-sizer>
                        </Page> -->
                    </div>
                </div>
                <div>                
                    <Row class="bond-detail" style="height:182px;background:none;">
                        <div class="align-right">
                            <Button size="small" type="primary" v-if="userButtonRoles.startAddProcess_12_12 && lAddCount==0" @click="startAddFlow">启动追加流程</Button>
                        </div>
                        <div class="align-right" v-if="lAddCount!=0" style="height:25px;">
                            
                        </div>
                        <Row class="detail-content card-bg">
                            <div v-if="cIsCheckCredit!=0">
                                <Col span="24"><h3>主体剩余授信额度检查</h3></Col>
                                <Col span="24"><span>当前剩余&nbsp;:&nbsp;</span>{{checkdata.restCredit}}<strong v-if="checkdata.restCredit==0||checkdata.restCredit">万</strong></Col>
                                <Col span="24"><span>本次使用&nbsp;:&nbsp;</span>{{currentUse}}<strong v-if="currentUse==0 || currentUse">万</strong>&nbsp;&nbsp;<b :class="[currentUse > checkdata.restCredit?'warning-stop':'warning-pass']">{{currentUse > checkdata.restCredit?'超限':'通过'}}</b></Col>
                            </div>
                        <Col span="24"><h3>我司单券集中度检查</h3></Col>
                        <Col span="24"><span>发行规模&nbsp;:&nbsp;</span>{{checkdata.issueAmountAct}}<strong v-if="checkdata.issueAmountAct==0||checkdata.issueAmountAct">亿</strong></Col>
                        <Col span="24"><span>集中度上限&nbsp;:&nbsp;</span>{{checkdata.enConcentraLimit}}<strong v-if="checkdata.enConcentraLimit==0 || checkdata.enConcentraLimit">%</strong></Col>
                        <Col span="24"><span>当前集中度&nbsp;:&nbsp;</span>{{currentFocus}}<em v-if="(this.checkdata.issueAmountAct)*10e9>1">%</em>&nbsp;&nbsp;<b v-if="(this.checkdata.issueAmountAct)*10e9>1" :class="[currentFocus > checkdata.enConcentraLimit?'warning-stop':'warning-pass']">{{currentFocus > checkdata.enConcentraLimit?'超限':'通过'}}</b></Col>
                        </Row>
                    </Row>                        
                </div>
            </div>
            <Row :gutter="5" class="bottom-height">
                <div class="sec-header">
                    <h3>投标决议中标结果</h3>
                    <div class="right-wrapper">
                        <label for="">账户类型</label>
                        <Select size="small" v-model="dicFundType" style="width:70px">
                            <Option v-for="item in dicFundList" :value="item.value" :key="item.value">{{ item.label }}</Option>
                        </Select>
                        <!-- <label for="">自定分组</label>
                        <Select size="small" v-model="selfGroup" style="width:auto">
                            <Option v-for="item in selfGroupList" :value="item.value" :key="item.value">{{ item.label }}</Option>
                        </Select> -->
                        <label for="">投资经理</label>
                        <Select size="small" v-model="dicManager" style="width:70px">
                            <Option v-for="item in dicManagerList" :value="item.id" :key="item.id">{{ item.vcDisplayName }}</Option>
                        </Select>
                        <Button size="small" type="primary" @click="clearSelect">清空筛选</Button>
                        <Button size="small" type="primary" @click="selectWinBidResult('num')">查询</Button>
                        <!-- <Button style="margin-left:20px;" size="small" type="primary" @click="layoutSet">布局设置</Button> -->
                        <!-- <Button size="small" type="primary" @click="autoDisRule">自动分配规则</Button> -->
                        <Button style="margin-left:20px;" size="small" type="primary" v-if="userButtonRoles.updateTenderResult_12_15 || userButtonRoles.updateTenderResultSecond_12_16"  @click="editBidResult">编辑</Button>
                        <Button size="small" type="primary" :loading="bidBtnLoading" v-if="userButtonRoles.confirmTheBid_12_2" @click="confirmBidResult">确认中标</Button>
                    </div>
                </div>
                <div class="marbot5 result-wrapper" ref="tableWrap">
                    <!-- 结果总量 -->
                    <Table ref="allTable" v-show="allTableShow" stripe highlight-row 
                        :row-class-name="rowClassName"
                        @on-current-change="highlightRowRes"
                        :height="tableHeight"
                        :loading="resultLoading" 
                        :columns="resultColumns" :data="resultData" 
                        @on-select="selects"
                        @on-select-cancel="selectCancel"
                        @on-selection-change="selectChange"
                        @on-select-all="selectAll"
                        @on-select-all-cancel="selectAllCancel"
                        >
                    </Table>
                    <!-- 银行间 -->
                    <Table ref="bankTable" v-show="bankTableShow" stripe highlight-row 
                        :row-class-name="rowClassName"
                        @on-current-change="highlightRowRes"
                        :height="tableHeight"
                        :loading="resultLoading" 
                        :columns="resultColumns" :data="resultDataBank" 
                        @on-select="selects"
                        @on-select-cancel="selectCancel"
                        @on-selection-change="selectChange"
                        @on-select-all="selectAll"
                        @on-select-all-cancel="selectAllCancel"
                        >
                    </Table>
                    <!-- 深交所A -->
                    <Table ref="shenTable" v-show="shenTableShow" stripe highlight-row 
                        :row-class-name="rowClassName"
                        @on-current-change="highlightRowRes"
                        :height="tableHeight"
                        :loading="resultLoading" 
                        :columns="resultColumns" :data="resultDataShen" 
                        @on-select="selects"
                        @on-select-cancel="selectCancel"
                        @on-selection-change="selectChange"
                        @on-select-all="selectAll"
                        @on-select-all-cancel="selectAllCancel"
                        >
                    </Table>
                    <!-- 上交所A -->
                    <Table ref="shangTable" v-show="shangTableShow" stripe highlight-row 
                        :row-class-name="rowClassName"
                        @on-current-change="highlightRowRes"
                        :height="tableHeight"
                        :loading="resultLoading" 
                        :columns="resultColumns" :data="resultDataShang" 
                        @on-select="selects"
                        @on-select-cancel="selectCancel"
                        @on-selection-change="selectChange"
                        @on-select-all="selectAll"
                        @on-select-all-cancel="selectAllCancel"
                        >
                    </Table>
                </div>
            </Row>
        </div>
        <Modal
            width="600"
            v-model="modalShow"
            :title="modalTitle"
            :loading="modalLoading"
            @on-ok="ok('name')"
            @on-visible-change="cancel">
            <div class="modal-wraper" v-if="modalTitle==='编辑中标量'">
                <!-- <Form ref="bidResultMtain" :model="bidResultMtain" :rules="bidResultMtainValidate" :label-width="100" label-position="right"> -->
                <Form ref="bidResultMtain" :model="bidResultMtain" :label-width="100" label-position="right">
                    <FormItem label="中标量" prop="totalAmount" :rules="{required: true,validator:validateNum, trigger: 'blur'}" v-if="lAddCount==0 || lAddCount==null">
                        <Input class="wid420" number v-model="bidResultMtain.totalAmount" placeholder="请输入">
                            <span slot="append">万</span>
                        </Input>
                    </FormItem>
                    <FormItem label="追加中标量" prop="addTotalAmount" :rules="{required: true,validator:validateNum, trigger: 'blur'}" v-if="lAddCount>0">
                        <Input class="wid420" number v-model="bidResultMtain.addTotalAmount" placeholder="请输入">
                            <span slot="append">万</span>
                        </Input>
                    </FormItem>
                </Form>                
            </div>
            <div class="modal-wraper" v-if="modalTitle==='编辑首轮'">
                <!-- <Form ref="firEditForm" :model="firEditForm" :rules="firEditFormValidate" :label-width="100" label-position="right"> -->
                <Form ref="firEditForm" :model="firEditForm" :label-width="100" label-position="right">
                    <FormItem label="调整中标量" prop="totalAmount" :rules="{required: true,validator:validateNum, trigger: 'blur'}">
                        <Input  number class="wid420" v-model="firEditForm.totalAmount" placeholder="请输入" style="margin-left:8px;">
                            <span slot="append">万</span>
                        </Input>
                    </FormItem>
                    <FormItem label="分销/二级买入" prop="primarySecondary">
                        <Select class="wid420 marginLeft15" v-model="firEditForm.primarySecondary" placeholder="请选择">
                            <Option :value="1">分销</Option>
                            <Option :value="2">二级买入</Option>
                        </Select>
                    </FormItem>
                    <FormItem label="反馈" prop="vcRemarks">
                        <Input  class="wid420 marginLeft15" type="textarea" v-model="firEditForm.vcRemarks" placeholder="请输入" />
                    </FormItem>
                </Form>                
            </div>
            <div class="modal-wraper" v-if="modalTitle==='编辑次轮'">
                <Form ref="secEditForm" :model="secEditForm" :label-width="110" label-position="right">
                    <FormItem label="调整追加中标量" prop="lAddLotAllot" :rules="{required: true,validator:validateNum, trigger: 'blur'}">
                        <Input number class="wid420" v-model="secEditForm.lAddLotAllot" placeholder="请输入" style="margin-left:8px;">
                            <span slot="append">万</span>
                        </Input>
                    </FormItem>
                    <FormItem label="分销/二级买入" prop="primarySecondary">
                        <Select class="wid420 marginLeft15" v-model="secEditForm.primarySecondary" placeholder="请选择">
                            <Option :value="1">分销</Option>
                            <Option :value="2">二级买入</Option>
                        </Select>
                    </FormItem>
                    <FormItem label="反馈" prop="vcRemarks">
                        <Input class="wid420 marginLeft15" type="textarea" v-model="secEditForm.vcRemarks" placeholder="请输入" />
                    </FormItem>
                </Form>                
            </div>
            <div class="modal-wraper" v-if="modalTitle==='调整市场'">
                <Table height="200" :columns="adjMarketColumns" :data="dataAdjMarket"></Table>
                <Button :loading="defineBtnLoading" type="primary" size="large" style="position:relative;left:calc(-50% + 65px);bottom:-75px;" @click="defineAndDist">确定并自动分配</Button>
            </div>
            <div class="modal-wraper" v-if="modalTitle==='编辑中标价格'">
                <Form ref="bidPriceForm" :model="bidPriceForm"  :label-width="100" label-position="right">
                    <FormItem label="中标价格" prop="bidPrice" :rules="{required: true,validator:validateNum, trigger: 'blur'}">
                        <Input v-model="bidPriceForm.bidPrice" placeholder="请输入">
                            <span slot="append">元</span>
                        </Input>
                    </FormItem>
                </Form>
            </div>
        </Modal>
         <Refresh @refresh="refresh"></Refresh>  
    </div>
</template>
<script>
import {validateNum} from '../../util/valide.js'
import Refresh from '../Refresh.vue'
import {getSectionInfo} from './../../util/base.js';
import {selectUserAuth} from '../../Api/common.js'
import { setTimeout } from 'timers';
import { close, constants } from 'fs';
export default {
    name:'page_12',
    data(){
        return{
            validateNum:validateNum,
            autoDisLoading:false,
            //"确认中标"按钮点击
            bidBtnLoading:false,
            defineBtnLoading:false,
            //是否检查“授信额度”
            cIsCheckCredit:1,
            //发行次数
            lIssueCnt:0,
            //权限‘按钮’控制
            userButtonRoles:{
                updateLotPrice_11_11:false,//调整中标价格
                updateBondBiddingResult_12_13:false,//编辑中标量
                automaticallyAssigned_12_1:false,//自动分配
                startAddProcess_12_12:false,//启动追加流程
                updateTenderResult_12_15:false,//编辑(首轮)
                updateTenderResultSecond_12_16:false,///编辑(次轮)
                selectMarket_12_9:false,//调整市场
                confirmTheBid_12_2:false//确认中标
            },
            tableHeight:300,
            //是否已“自动分配”,0,未分配,1,已分配
            state:0,
            //权限集合
            rightObj:{},
            //追加次数
            lAddCount:1,
            vcCode:'',
            //modal
            modalShow:false,
            modalTitle:'',
            modalLoading:true,
            //中标结果维护form
            bidResultMtain:{
                totalAmount:0,
                addTotalAmount:0,
                //primarySecondary:1,
                vcScode:''
            },
            bidResultMtainValidate:{
                totalAmount: [
                        { required: true, min: 0, type: 'number', message: '中标量必须为数值且不能小于0', trigger: 'change' }
                ],
                addTotalAmount: [
                        { required: true, min: 0, type: 'number', message: '追加中标量必须为数值且不能小于0', trigger: 'change' }
                ],
                // primarySecondary: [
                //         { required: false, type: 'string', message: '请选择分销或二级买入', trigger: 'change' }
                // ],
                // vcScode: [
                //         { required: false, type: 'string', message: '请输入债券内码', trigger: 'blur' }
                // ]
            },
            //“编辑”投标决议中标结果form
            firEditForm:{
                Id:0,
                primarySecondary:1,
                totalAmount:0,
                stockId:0,
                vcRemarks:''
            },
            firEditFormValidate:{
                totalAmount: [
                        { required: false, type: 'number', message: '请输入', trigger: 'blur' }
                ],
                primarySecondary: [
                        { required: false, type: 'number', message: '请选择', trigger: 'change' }
                ],
                vcRemarks: [
                        { required: false, type: 'string', message: '请输入', trigger: 'blur' }
                ],
            },
            secEditForm:{
                primarySecondary:1,
                stockId:0,
                lAddLotAllot:0,
                vcRemarks:''
            },
            // secEditFormValidate:{
            //     primarySecondary: [
            //         { required: false, type: 'string', message: '请选择分销或二级买入', trigger: 'change' }
            //         { required: false }
            //     ]
            // }, 
            //编辑中标价格
            bidPriceForm:{
                bidPrice:0
            }, 
            bidPriceFormValidate:{
                bidPrice:[
                    //{ required: false, type: 'string', message: '请选择分销或二级买入', trigger: 'change' }
                    { required: false }
                ]
            },    
            //债券简称
            bondshortname:'',
            selectedbond:'',
            bondDetail:{
                vcCreditRating:'',
                vcRatingOrgan:'',
                vcCreditRatingTk:'',
                vcRatingOrganTk:'',
                vcPrimaryRating:'',
                vcPoolname:'',
                vcStarLevel:'',
                vcAdviceRate:'',
                vcFloorPrice:'',
                lOutLowestPrice:''
            },
            checkdata:{
                restCredit:0,//主体剩余授信额度
                enConcentraLimit:0,//单券集中度上限
                issueAmountAct:0,//发行规模
                //enIssueAmountAct:0,//发行规模
            },
            dicFundList: [],
            dicFundType:'',
            dicManagerList: [],
            dicManager: '',
            bondlist: [],
            //债券发行信息
            detailLoading:false,
            detailColumns:[
                {
                    title:'发行市场',
                    key:'vcMarketName',
                    minWidth:80
                },
                {
                    title:'债券类型',
                    key:'vcBondTypeName',
                    minWidth:100
                },
                {
                    title:'期限',
                    key:'enMaturity',
                    minWidth:50
                },
                {
                    title:'发行主体',
                    key:'vcIssueCompany',
                    minWidth:100
                },
                {
                    title:'主体属性',
                    key:'vcInstType',
                    minWidth:100
                },
                {
                    title:'主体剩余授信',
                    key:'enLeftCredit',
                    minWidth:100
                },
                {
                    title:'集中度限制',
                    key:'enConcentraLimit',
                    minWidth:100
                },
                // {
                //     title:'计划发行规模',
                //     key:'enIssueAmountAct',
                //     minWidth:80
                // },
                {
                    title:'上市日期',
                    key:'lListDate',
                    minWidth:80
                }
            ],
            detailData:[],
            bondDetail:{},
            //中标结果维护
            mtainLoading:false,
            mtainColumns:[
                {
                    title:'市场',
                    key:'vcMarketName',
                    minWidth:80
                },
                {
                    title:'中标量',
                    key:'enLotTotalAmount',
                    minWidth:80
                },
                // {
                //     title:'剩余中标量',
                //     key:'enLotNotAmount',
                //     minWidth:80
                // },
                {
                    title:'追加中标量',
                    key:'enLotAddTotalAmount',
                    minWidth:80
                },
                // {
                //     title:'剩余追加中标量',
                //     key:'enLotAddNotAmount',
                //     minWidth:100
                // },
                {
                    title:'中标价格',
                    key:'enLotPrice',
                    minWidth:80
                },
                // {
                //     title:'实际发行规模',
                //     key:'enIssueAmountAct',
                //     minWidth:100
                // },
                // {
                //     title:'内部中标价',
                //     key:'enLotPriceTk',
                //     minWidth:80
                // },
                // {
                //     title:'分销/二级买入',
                //     key:'primaryOrSecondary',
                //     width:100
                // },
                {
                    title:'已分配中标',
                    key:'lotAmountDispatch',
                    minWidth:80
                },
                {
                    title:'未分配中标',
                    key:'noLotAmountDispatch',
                    minWidth:80
                },
                {
                    title:'已分配追加中标',
                    key:'addLotAmountDispatch',
                    minWidth:100
                },
                {
                    title:'未分配追加中标',
                    key:'noAddLotAmountDispatch',
                    minWidth:100
                },
            ],
            mtainData:[],
            mtainSumColumns:[
                {
                    title:'市场',
                    key:'mtain1',
                    minWidth:80
                },
                {
                    title:'中标量',
                    key:'mtain2',
                    minWidth:80
                },
                // {
                //     title:'剩余中标量',
                //     key:'enLotTotalAmount',
                //     minWidth:80
                // },
                {
                    title:'追加中标量',
                    key:'mtain3',
                    minWidth:80
                },
                // {
                //     title:'剩余追加中标量',
                //     key:'enLotAddTotalAmount',
                //     minWidth:100
                // },
                {
                    title:'中标价格',
                    key:'mtain4',
                    minWidth:80
                },
                // {
                //     title:'实际发行规模',
                //     key:'mtain5',
                //     minWidth:100
                // },
                // {
                //     title:'内部中标价',
                //     key:'mtain6',
                //     minWidth:80
                // },
                // {
                //     title:'分销/二级买入',
                //     key:'mtain7',
                //     width:100
                // },
                {
                    title:'已分配中标',
                    key:'lotAmountDispatch',
                    minWidth:80
                },
                {
                    title:'未分配中标',
                    key:'noLotAmountDispatch',
                    minWidth:80
                },
                {
                    title:'已分配追加中标',
                    key:'addLotAmountDispatch',
                    minWidth:100
                },
                {
                    title:'未分配追加中标',
                    key:'noAddLotAmountDispatch',
                    minWidth:100
                },
            ],
            mtainSumData:[
                {
                    mtain1:'汇总',
                    mtain2:0,
                    mtain3:0,
                    mtain4:'',
                    mtain5:0,
                    mtain6:'',
                    mtain7:'',
                    lotAmountDispatch:0,
                    noLotAmountDispatch:0,
                    addLotAmountDispatch:0,
                    noAddLotAmountDispatch:0
                }
            ],
            //投标决议中标结果(总类)
            resultLoading:false,
            resultColumns:[
                    {
                        type: 'selection',
                        minWidth: 40
                    },
                    {
                        title:'账户简称',
                        key:'vcFundName',
                        ellipsis:true,
                        tooltip:true,
                        minWidth: 60
                    },
                    {
                        title:'组合名称',
                        key:'vcCombiName',
                        ellipsis:true,
                        tooltip:true,
                        minWidth: 60
                    },
                    {
                        title:'标位',
                        key:'enBidPrice',
                        minWidth: 50
                    },
                    {
                        title:'投标数量',
                        key:'enBidAmountModify',
                        minWidth: 60
                    },
                    // {
                    //     title:'调整中标量',
                    //     key:'lLotAmountDispatch',
                    //     minWidth: 70
                    // },
                    // {
                    //     title:'未分配量',
                    //     key:'result6'
                    // },
                    {
                        title:'中标分配量',
                        key:'lLotAmountModify',
                        minWidth: 70
                    },
                    {
                        title:'追加投标量',
                        key:'enAddModifyAmount',
                        minWidth: 70
                    },
                    // {
                    //     title:'调整追加中标',
                    //     key:'lAddLot',
                    //     minWidth: 80
                    // },
                    {
                        title:'追加中标分配',
                        key:'lAddLotAllot',
                        minWidth: 80
                    },
                    {
                        title:'生成分销/买入',
                        key:'cPrimaryOrSecondary',
                        minWidth: 100,
                        // render: (h, params) => {
                        //     let type;
                        //     if(params.row.cPrimaryOrSecondary!==null){
                        //         if(params.row.cPrimaryOrSecondary === 1){
                        //             type="分销";
                        //         }else if(params.row.cPrimaryOrSecondary === 2){
                        //             type="二级买入";
                        //         }else if(params.row.cPrimaryOrSecondary === 2){
                        //             type="放弃";;
                        //         }
                        //     }else{
                        //         type='';
                        //     }
                        //     //const type = params.row.cPrimaryOrSecondary === 1?'分销':'二级买入';
                        //     return h('span', {
                        //         props: {
                        //             size: 18
                        //         }
                        //     },type);
                        // }
                    },
                    {
                        title:'指令下达人',
                        key:'startUserId',
                        minWidth: 70
                    },
                    {
                        title:'市场',
                        key:'vcMarketName',
                        minWidth: 50
                    },
                    {
                        title:'反馈',
                        key:'vcRemarks',
                        minWidth: 50
                    }
                ],
            filterData:[],
            resultData:[],
            allTableShow:true,
            //银行间tableDate
            resultDataBank:[],
            bankTableShow:false,
            //深交所tableData
            resultDataShen:[],
            shenTableShow:false,
            //上交所tableData
            resultDataShang:[],
            shangTableShow:false,
            //"投标决议中标结果"选中项
            selectedResults:[],

            //调整市场
            adjMarketColumns:[
                {
                    title: '账户简称',
                    key: 'vcFundName'
                },
                {
                    title: '组合名称',
                    key: 'vcCombiName'
                },
                {
                    title: '中标总量',
                    key: 'lLotAmountModify'
                },
                {
                    title: '追加总量',
                    key: 'enAddAmount'
                },
                {
                    title: '指令下达人',
                    key: 'startUserId'
                },
                {
                    title: '市场',
                    width:100,
                    render: (h, params) => {
                        const name=params.row.vcMarketName;
                        return h('Select',{
                                props:{
                                    value:name,
                                    size: 'small'
                                    //placeholder:name
                                },
                                on: {
                                    'on-change':(value) => {
                                        //params.row.vcMarketName = value;
                                        this.dataAdjMarket[params.index].vcMarketName=value;
                                    }
                                },
                            },
                            params.row.markets.map((item) => {
                                return h('Option',{
                                    props: {
                                        value: item
                                    }
                                },item);
                            })                         
                        );
                    }
                }
            ],
            dataAdjMarket:[],
            marketList:[],
            selectedMtainRow:{},
            selectedResultRow:{},
            selectedVscode:'',
            selectedStockid:''            
        }
    },
    beforeRouteEnter (to, from, next) {
        next(vm => {
            // 在路由跳转之前获取pageId
            console.log(to.query)
            vm.pageId = to.query.pageId;
            var SelectUserAuth =  selectUserAuth.bind(vm);
            SelectUserAuth();
        })
    },
    mounted(){
        //if(this.$refs.tableWrap.getBoundingClientRect()){
            this.tableHeight=this.$refs.tableWrap.getBoundingClientRect().height;
            window.addEventListener('resize', () => {//动态调整高度
                this.tableHeight=this.$refs.tableWrap.getBoundingClientRect().height;
            })
        //}
    },
    created(){
        this.selectdicFundList();
        this.selectdicManagerList();
        this.selectBondList();

        //获取选中树的第一项
        //this.$refs.bondList.getSelectedTreeItem();
    },
    computed:{
        //本次使用(计算)
        currentUse(){
            return  this.mtainSumData[0].lotAmountDispatch + this.mtainSumData[0].addLotAmountDispatch;
        },
        //当前集中度
        currentFocus(){
            if((this.checkdata.issueAmountAct)*10e9<1){
                return '发行规模缺失';
            }else{
                let focusNum=((this.mtainSumData[0].lotAmountDispatch*1 + this.mtainSumData[0].addLotAmountDispatch*1)/(this.checkdata.issueAmountAct * 1e4) * 100).toFixed(2);
                if(isNaN(focusNum)){
                    return 0;
                }else{
                    return focusNum;
                }
            }
        }
    },
    watch:{
        mtainData:{//汇总(中标结果维护)
            handler:function(val,oldVal){
                let bidSum=0;//中标量            
                let addBidSum=0;//追加中标量            
                let actualIssuueAmount=0;//实际发行规模
                let distributedBid=0;//已分配中标
                let willDistributedBid=0;//未分配中标
                let distributedAddBid=0;//已分配追加中标
                let willDistributedAddBid=0;//未分配追加中标
                for(let i=0;i<val.length;i++){
                    bidSum+=val[i].enLotTotalAmount;
                    addBidSum+=val[i].enLotAddTotalAmount;
                    //actualIssuueAmount+=val[i].enIssueAmountAct;
                    distributedBid+=val[i].lotAmountDispatch;
                    willDistributedBid+=val[i].noLotAmountDispatch;
                    distributedAddBid+=val[i].addLotAmountDispatch;
                    willDistributedAddBid+=val[i].noAddLotAmountDispatch;
                }
                this.mtainSumData[0].mtain2=bidSum;
                this.mtainSumData[0].mtain3=addBidSum;
                //this.mtainSumData[0].mtain5=actualIssuueAmount;
                this.mtainSumData[0].lotAmountDispatch=distributedBid;
                this.mtainSumData[0].noLotAmountDispatch=willDistributedBid;
                this.mtainSumData[0].addLotAmountDispatch=distributedAddBid;
                this.mtainSumData[0].noAddLotAmountDispatch=willDistributedAddBid;
            },
            deep:true
        },
        resultData:{//各个市场汇总(中标结果维护)
            handler:function(val,oldVal){
                if(this.lAddCount===0){
                    //查找“中标结果维护”与“投标决议中标结果”相同市场,并对“投标决议中标结果”市场相同的项进行累加
                    for(let j=0;j<this.mtainData.length;j++){
                        let distributedBidSum=0;//已分配中标
                        let willDistributedBidSum=0;//未分配中标
                        let distributedAddBidSum=0;//已分配追加中标
                        let willDistributedAddBidSum=0;//未分配追加中标                        
                        for(let i=0;i<val.length;i++){
                            if(val[i]._checked===true){//如果行选中并且上下两个表格的市场相同
                                if(this.mtainData[j].vcMarketName===val[i].vcMarketName){
                                    if(val[i].enLotAmountModify==null){
                                        distributedBidSum+=val[i].enLotAmountDispatch;
                                    }else{
                                        distributedBidSum+=val[i].enLotAmountModify;
                                    }
                                    
                                }
                            }
                        }
                        console.log("已分配中标量汇总"+distributedBidSum);
                        //this.mtainData[j].lotAmountDispatch=this.mtainData[j].lotAmountDispatchTwo + distributedBidSum;
                        //this.mtainData[j].noLotAmountDispatch=this.mtainData[j].enLotNotAmount - distributedBidSum;
                        this.mtainData[j].lotAmountDispatch=distributedBidSum;
                        this.mtainData[j].noLotAmountDispatch=this.mtainData[j].enLotNotAmount - this.mtainData[j].lotAmountDispatch;
                        //this.mtainData[j].addLotAmountDispatch=distributedAddBidSum;
                        this.mtainData[j].addLotAmountDispatch=0;
                        //this.mtainData[j].noAddLotAmountDispatch=this.mtainData[j].lAddLot - this.mtainData[j].addLotAmountDispatch;
                        this.mtainData[j].noAddLotAmountDispatch=0;
                    }
                }else{
                    //查找“中标结果维护”与“投标决议中标结果”相同市场,并对“投标决议中标结果”市场相同的项进行累加
                    for(let j=0;j<this.mtainData.length;j++){
                        let distributedBidSum=0;//已分配中标
                        let willDistributedBidSum=0;//未分配中标
                        let distributedAddBidSum=0;//已分配追加中标
                        let willDistributedAddBidSum=0;//未分配追加中标                        
                        for(let i=0;i<val.length;i++){
                            if(val[i]._checked===true){//如果行选中并且上下两个表格的市场相同
                                if(this.mtainData[j].vcMarketName===val[i].vcMarketName){
                                    //distributedBidSum+=val[i].enLotAmountModify;
                                    //willDistributedBidSum+=val[i].result6;
                                    // distributedAddBidSum+=val[i].lAddLot;
                                    //willDistributedAddBidSum+=val[i].result10;
                                    if(val[i].lAddLotAllot==null){
                                        distributedAddBidSum+=val[i].lAddLot;
                                    }else{
                                        distributedAddBidSum+=val[i].lAddLotAllot;
                                    }

                                }
                            }
                        }
                        this.mtainData[j].lotAmountDispatch=0;
                        this.mtainData[j].noLotAmountDispatch=0;
                        this.mtainData[j].addLotAmountDispatch=distributedAddBidSum;
                        //this.mtainData[j].noAddLotAmountDispatch=this.mtainData[j].enLotAddTotalAmount - this.mtainData[j].addLotAmountDispatch;
                        this.mtainData[j].noAddLotAmountDispatch=this.mtainData[j].enLotAddNotAmount - this.mtainData[j].addLotAmountDispatch;
                    }
                }
            },
            deep:true
        }

    },
    methods:{
        refresh(){
            //清空“中标结果维护”相关数据
            this.selectedStockid='';
            this.selectedVscode='';
            this.selectedMtainRow={};
            //清空“投标决议中标结果”相关数据
            this.selectedResultRow={};
            this.dicFundType='';
            this.dicManager=''

            this.selectdicFundList();
            this.selectdicManagerList();
            this.selectBondList();
            //刷新后，将“投标决议中标结果”显示所有市场的table显示出来
            this.allTableShow=true;
            this.bankTableShow=false;
            this.shenTableShow=false;
            this.shangTableShow=false;
        },
        //根据选中的“投标指令明细”改变“汇总”对应的行样式
        rowClassName (row, index) {
            // if (row.cIsModify === 1) {
            //     return 'editable-row-class';
            // }else{
            //     return '';
            // }
        },
        //调整市场下“确定并自动分配”
        defineAndDist(){
            //this.defineBtnLoading=true;
            //this.modalShow=false;
            let map={};//key是id,市场是val stockId vcMarketName
                for(let i=0;i<this.dataAdjMarket.length;i++){
                    map[this.dataAdjMarket[i].stockId]=this.dataAdjMarket[i].vcMarketName;
                }
                this.$httpPost('/bondBid/updateStockMarket',{vcCode:this.vcCode,map:map})
                    .then((res) => {            
                        if(res.status===200 && res.data){                       
                            //this.$Message.success(res.data.data);
                            this.modalShow=false;
                            //this.selectWinBidResultMtain();
                            this.autoDis('define');
                            
                        }else{
                            this.$Message.warning(res.data.data);
                            this.modalLoading=false;
                        }                
                    })
            
        },
        //表格全选
        selectAll(selection){
            console.log(selection);
            //selection.forEach((item)=>item._checked=true);
            let currentData=[];
            if(this.allTableShow==true){
                currentData=this.resultData;
            }else if(this.bankTableShow==true){
                currentData=this.resultDataBank;
            }else if(this.shenTableShow==true){
                currentData=this.resultDataShen;
            }else if(this.shangTableShow==true){
                currentData=this.resultDataShang;
            }
            this.resultData.forEach((obj)=>{
                currentData.forEach((item)=>{
                    // if(item.rownum===obj.rownum){
                    //     obj._checked=true;
                    // }
                    if(this.lAddCount==0){
                        if(item.stockId==obj.stockId && item.id==obj.id){
                            obj._checked=true;
                        }
                    }else{
                        if(item.stockId==obj.stockId){
                            obj._checked=true;
                        }
                    }
                });
                
            })
                
            
        },
        //表格取消全选
        selectAllCancel(selection){
            //selection.forEach((item)=>item._checked=false);
            let currentData=[];
            if(this.allTableShow==true){
                currentData=this.resultData;
            }else if(this.bankTableShow==true){
                currentData=this.resultDataBank;
            }else if(this.shenTableShow==true){
                currentData=this.resultDataShen;
            }else if(this.shangTableShow==true){
                currentData=this.resultDataShang;
            }
            this.resultData.forEach((obj)=>{
                currentData.forEach((item)=>{
                    // if(item.rownum===obj.rownum){
                    //     obj._checked=false;
                    // }
                    if(this.lAddCount==0){
                        if(item.stockId==obj.stockId && item.id==obj.id){
                            obj._checked=false;
                        }
                    }else{
                        if(item.stockId==obj.stockId){
                            obj._checked=false;
                        }
                    }
                });               
            })
            console.log(this.resultData);
        },
        //投标决议中标结果“表头”
        getTableHeader(){
            if(this.lAddCount==0){
                this.resultColumns=[
                    {
                        type: 'selection',
                        minWidth: 50
                    },
                    {
                        title:'账户简称',
                        key:'vcFundName',
                        ellipsis:true,
                        tooltip:true,
                        minWidth: 60
                    },
                    {
                        title:'组合名称',
                        key:'vcCombiName',
                        ellipsis:true,
                        tooltip:true,
                        minWidth: 60
                    },
                    {
                        title:'标位',
                        key:'enBidPrice',
                        minWidth: 50
                    },
                    {
                        title:'投标数量',
                        key:'enBidAmountModify',
                        minWidth: 60
                    },
                    // {
                    //     title:'调整中标量',
                    //     key:'enLotAmountDispatch',
                    //     minWidth: 70
                    // },
                    // {
                    //     title:'未分配量',
                    //     key:'result6'
                    // },
                    {
                        title:'中标分配量',
                        key:'enLotAmountModify',
                        minWidth: 70
                    },
                    // {
                    //     title:'追加投标量',
                    //     key:'enAddAmount'
                    // },
                    // {
                    //     title:'追加中标分配',
                    //     key:'lAddLot',
                    //     width:100
                    // },
                    // {
                    //     title:'调整追加中标',
                    //     key:'result10',
                    //     width:100
                    // },
                    {
                        title:'生成分销/买入',
                        key:'cPrimaryOrSecondary',
                        minWidth: 100
                    },
                    {
                        title:'指令下达人',
                        key:'startUserId',
                        minWidth: 70
                    },
                    {
                        title:'市场',
                        key:'vcMarketName',
                        minWidth: 50
                    },
                    {
                        title:'反馈',
                        key:'vcRemarks',
                        ellipsis:true,
                        tooltip:true,
                        minWidth: 50
                    }
                ]
            }else{
                this.resultColumns=[
                    {
                        type: 'selection',
                        minWidth: 50
                    },
                    {
                        title:'账户简称',
                        key:'vcFundName',
                        ellipsis:true,
                        tooltip:true,
                        minWidth: 60
                    },
                    {
                        title:'组合名称',
                        key:'vcCombiName',
                        ellipsis:true,
                        tooltip:true,
                        minWidth: 60
                    },
                    // {
                    //     title:'标位',
                    //     key:'enBidPrice'
                    // },
                    {
                        title:'投标数量',
                        key:'enBidAmountModify',
                        minWidth:70
                    },
                    // {
                    //     title:'中标分配量',
                    //     key:'lLotAmountDispatch'
                    // },
                    // {
                    //     title:'未分配量',
                    //     key:'result6'
                    // },
                    // {
                    //     title:'调整中标量',
                    //     key:'lLotAmountModify'
                    // },
                    {
                        title:'追加投标量',
                        key:'enAddModifyAmount',
                        minWidth:80
                    },
                    // {
                    //     title:'调整追加中标',
                    //     key:'lAddLot',
                    //     minWidth:100
                    // },
                    {
                        title:'追加中标分配',
                        key:'lAddLotAllot',
                        minWidth:100
                    },
                    {
                        title:'生成分销/买入',
                        key:'cPrimaryOrSecondary',
                        minWidth: 100,
                    },
                    {
                        title:'指令下达人',
                        key:'startUserId',
                        minWidth: 70
                    },
                    {
                        title:'市场',
                        key:'vcMarketName',
                        minWidth: 50
                    },
                    {
                        title:'反馈',
                        key:'vcRemarks',
                        ellipsis:true,
                        tooltip:true,
                        minWidth: 50
                    }
                ]
            }
        },
        //弹框中确认
        ok(name){
            let re = /^[0-9]+\.?[0-9]*$/;
            if(this.modalTitle==='调整市场'){//修改指令市场
                let map={};//key是id,市场是val stockId vcMarketName
                for(let i=0;i<this.dataAdjMarket.length;i++){
                    map[this.dataAdjMarket[i].stockId]=this.dataAdjMarket[i].vcMarketName;
                }
                this.$httpPost('/bondBid/updateStockMarket',{vcCode:this.vcCode,map:map})
                    .then((res) => {            
                        if(res.status===200 && res.data){                       
                            this.$Message.success(res.data.data);
                            this.modalShow=false;
                            //this.selectWinBidResultMtain();
                            this.selectWinBidResult();
                        }else{
                            this.$Message.warning(res.data.data);
                            this.modalLoading=false;
                        }                
                    })
            }else if(this.modalTitle==='编辑中标量'){//编辑中标量
                if(this.bidResultMtain.addTotalAmount===null){
                    this.bidResultMtain.addTotalAmount=0;
                }
                if(this.bidResultMtain.totalAmount===null){
                    this.bidResultMtain.totalAmount=0;
                }                 
                let str='';
                if(this.lAddCount>0){
                    this.$refs.bidResultMtain.validate((valid) => {
                        if(valid){
                            str=`totalAmount=${this.bidResultMtain.addTotalAmount}`;
                            this.$httpGet(`/bondBid/updateBondBiddingResult?lIssueCnt=${this.lIssueCnt}&addCount=${this.lAddCount}&`+str+`&vcScode=${this.bidResultMtain.vcScode}`)
                                .then((res) => {            
                                    if(res.status===200 && res.data){                       
                                        this.$Message.success(res.data.data);
                                        //this.$refs[name].resetFields();
                                        this.modalShow=false;
                                        this.selectWinBidResultMtain();
                                        this.selectedVscode='';
                                    }else{
                                        this.$Message.warning(res.data.data);
                                        this.modalLoading=false;
                                    }                         
                                })
                        }else{
                            this.$Message.warning("追加中标量不符合规则");
                            this.modalLoading = false;
                        }
                    })
                }else{
                    this.$refs.bidResultMtain.validate((valid) => {
                        if(valid){
                            str=`totalAmount=${this.bidResultMtain.totalAmount}`;
                            this.$httpGet(`/bondBid/updateBondBiddingResult?lIssueCnt=${this.lIssueCnt}&addCount=${this.lAddCount}&`+str+`&vcScode=${this.bidResultMtain.vcScode}`)
                                .then((res) => {            
                                    if(res.status===200 && res.data){                       
                                        this.$Message.success(res.data.data);
                                        //this.$refs[name].resetFields();
                                        this.modalShow=false;
                                        this.selectWinBidResultMtain();
                                        this.selectedVscode='';
                                    }else{
                                        this.$Message.warning(res.data.data);
                                        this.modalLoading=false;
                                    }                         
                                })
                        }else{
                            this.$Message.warning("中标量不符合规则");
                            this.modalLoading = false;
                        }
                    })                           
                }
            }else if(this.modalTitle==='编辑中标价格'){//编辑中标价格
                this.$refs.bidPriceForm.validate((valid) => {
                    if(valid){
                        this.$httpGet(`/bondBid/updateLotPrice?lIssueCnt=${this.lIssueCnt}&enLotPrice=${this.bidPriceForm.bidPrice}&vcCode=${this.vcCode}`)
                        .then((res) => {            
                            if(res.status===200 && res.data.actionResult===1){                       
                                this.$Message.success(res.data.data);
                                //this.$refs[name].resetFields();
                                this.modalShow=false;
                                this.selectWinBidResultMtain();
                                this.selectedVscode='';
                            }else{
                                this.$Message.warning(res.data.data);
                                this.modalLoading=false;
                            }                         
                        })
                    }else{
                        this.$Message.warning("中标价格不符合规则");
                        this.modalLoading = false;
                    }
                })
            }else if(this.modalTitle==='编辑首轮'){//编辑首轮
                this.$refs.firEditForm.validate((valid) => {
                    if(valid){                   
                        if(this.firEditForm.vcRemarks==null || this.firEditForm.vcRemarks==undefined){
                            this.firEditForm.vcRemarks='';
                        }
                        this.$httpGet(`/bondBid/updateTenderResult?Id=${this.firEditForm.Id}&primarySecondary=${this.firEditForm.primarySecondary}&stockId=${this.firEditForm.stockId}&totalAmount=${this.firEditForm.totalAmount}&vcRemarks=${this.firEditForm.vcRemarks}`)
                        .then((res) => {            
                            if(res.status===200 && res.data){                       
                                //this.$refs[name].resetFields();
                                this.$Message.success(res.data.data);
                                this.modalShow=false;
                                //this.selectWinBidResult();
                                this.selectedStockid='';
                                //使用modal框中的数据替换表格中的数据
                                let currentData=[];
                                if(this.allTableShow==true){
                                    currentData=this.resultData;
                                }else if(this.bankTableShow==true){
                                    currentData=this.resultDataBank;
                                }else if(this.shenTableShow==true){
                                    currentData=this.resultDataShen;
                                }else if(this.shangTableShow==true){
                                    currentData=this.resultDataShang;
                                }
                                //this.resultData.forEach((obj)=>{
                                currentData.forEach((obj)=>{                                  
                                    if(obj.stockId==this.selectedResultRow.stockId && obj.id==this.selectedResultRow.id){
                                        //设置单元格可编辑样式
                                        obj.cellClassName={enLotAmountModify:'editable-td-class'};
                                    }
                                    if(obj.stockId==this.selectedResultRow.stockId){
                                        if(this.firEditForm.primarySecondary==1){
                                            obj.cPrimaryOrSecondary='分销';
                                            obj.primaryOrSecondary=1;
                                        }else if(this.firEditForm.primarySecondary==2){
                                            obj.cPrimaryOrSecondary='二级买入';
                                            obj.primaryOrSecondary=2;
                                        }
                                    }
                                    if(obj.stockId==this.selectedResultRow.stockId && obj.id==this.selectedResultRow.id){                                                                        
                                        obj.enLotAmountModify=this.firEditForm.totalAmount;
                                        obj.vcRemarks=this.firEditForm.vcRemarks;
                                        //如果“调整中标量为零或空”,取消选中
                                        if(this.firEditForm.totalAmount==0 || this.firEditForm.totalAmount==undefined || this.firEditForm.totalAmount==null){
                                            obj._checked=false;
                                        }
                                    }                                
                                })
                            }else{
                                this.$Message.warning(res.data.data);
                                this.modalLoading=false;
                            }                         
                        })
                    }else{
                        this.$Message.warning("字段不符合规则");
                        this.modalLoading = false;
                    }
                })
            }else if(this.modalTitle==='编辑次轮'){//编辑次轮
                this.$refs.secEditForm.validate((valid) => {
                    if(valid){
                        if(this.secEditForm.vcRemarks==null || this.secEditForm.vcRemarks==undefined){
                            this.secEditForm.vcRemarks='';
                        }
                        let str='';
                        if(this.secEditForm.lAddLotAllot==null){
                            str='';
                        }else{
                            str=`&totalAmount=${this.secEditForm.lAddLotAllot}`;
                        }
                        this.$httpGet(`/bondBid/updateTenderResultSecond?primarySecondary=${this.secEditForm.primarySecondary}&stockId=${this.secEditForm.stockId}${str}&vcRemarks=${this.secEditForm.vcRemarks}`)
                        //this.$httpGet(`/bondBid/updateTenderResultSecond?&primarySecondary=${this.secEditForm.primarySecondary}&stockId=${this.secEditForm.stockId}&totalAmount=${this.secEditForm.lAddLotAllot}&vcRemarks=${this.secEditForm.vcRemarks}`)
                        .then((res) => {            
                            if(res.status===200 && res.data){                       
                                this.$Message.success(res.data.data);
                                this.modalShow=false;
                                //this.selectWinBidResult();
                                this.selectedStockid='';
                                //使用modal框中的数据替换表格中的数据
                                let currentData=[];
                                if(this.allTableShow==true){
                                    currentData=this.resultData;
                                }else if(this.bankTableShow==true){
                                    currentData=this.resultDataBank;
                                }else if(this.shenTableShow==true){
                                    currentData=this.resultDataShen;
                                }else if(this.shangTableShow==true){
                                    currentData=this.resultDataShang;
                                }
                                //当前数据对象改变展示
                                currentData.forEach((obj)=>{ 
                                    if(obj.stockId==this.selectedResultRow.stockId){
                                        //用于改变单元格颜色
                                        obj.cellClassName={lAddLotAllot:'editable-td-class'};
                                        if(this.secEditForm.primarySecondary==1){
                                            obj.cPrimaryOrSecondary='分销';
                                            obj.primaryOrSecondary=1;
                                        }else if(this.secEditForm.primarySecondary==2){
                                            obj.cPrimaryOrSecondary='二级买入';
                                            obj.primaryOrSecondary=2;
                                        }
                                        obj.lAddLotAllot=this.secEditForm.lAddLotAllot;
                                        obj.vcRemarks=this.secEditForm.vcRemarks;
                                    }                           
                                })
                                //选中项数据也要对应改变
                                this.selectedResults.forEach((obj)=>{
                                    if(obj.stockId==this.selectedResultRow.stockId){
                                        obj.lAddLotAllot=this.secEditForm.lAddLotAllot;
                                    }
                                })
                            }else{
                                this.$Message.warning(res.data.data);
                                this.modalLoading=false;
                            }                         
                        })
                    }else{
                        this.$Message.warning("字段不符合规则");
                        this.modalLoading = false;
                    }
                })         
            }
        },
        //弹框关闭时,form重置
        cancel(bol){
            if(!bol){
                if(this.modalTitle=='编辑中标量'){
                    this.$refs.bidResultMtain.resetFields();
                }else if(this.modalTitle=='编辑首轮'){
                    this.$refs.firEditForm.resetFields();
                }else if(this.modalTitle=='编辑次轮'){
                    this.$refs.secEditForm.resetFields();
                }else if(this.modalTitle=='编辑中标价格'){
                    this.$refs.bidPriceForm.resetFields();
                }
            }
        },
        //点击tree获取选中项vcCode
        getSelectedTreeItem(obj){
            //显示包含所有市场的table
            this.allTableShow=true;
            this.bankTableShow=false;
            this.shenTableShow=false;
            this.shangTableShow=false;
            if(obj[0].vcCode){
                this.vcCode=obj[0].vcCode;
                this.lAddCount=obj[0].lAddCount;
                this.lIssueCnt=obj[0].lIssueCnt;
                this.selectedbond=obj[0].title;
                this.cIsCheckCredit=obj[0].cIsCheckCredit;
                this.getTableHeader();
                this.selectBondIssueInfo();
                this.selectWinBidResultMtain();
                this.selectWinBidResult();
                this.selectBondLeft();
                this.getBondDetailedInfo();
            }
        },
        //查询债券详细信息
        getBondDetailedInfo(){
            this.$httpGet(`/bondIssue/selectBondDetailedInfo?vcCode=${this.vcCode}&lIssueCnt=${this.lIssueCnt}`)
                .then((res) => {            
                    if(res.status===200 && res.data){
                        this.bondDetail=res.data;
                    }                
                })
        },       
        //查询账户大类
        selectdicFundList(){
            this.$httpGet(`/bondBid/selecDicFundType`)
                .then((res) => {            
                    if(res.status===200 && res.data){ 
                        this.dicFundList = [];                      
                        for(let i=0;i<res.data.length;i++){
                            let obj={};
                            obj.label=res.data[i];
                            obj.value=res.data[i];
                            this.dicFundList.push(obj);
                        }
                        
                    }                
                })
        },
        //查询投资经理
        selectdicManagerList(){
            this.$httpGet(`/bondBid/selecDicManager`)
                .then((res) => {            
                    if(res.status===200 && res.data){  
                        this.dicManagerList=res.data;                       
                    }                
                })
        },
        //查询交易市场列表
        selectdicMarketList(){
            this.$httpGet(`/bondBid/selectMarket?lIssueCnt=${this.lIssueCnt}&vcCode=${this.vcCode}`)
                .then((res) => {            
                    if(res.status===200 && res.data){  
                        this.marketList=[];
                        for(let i=0;i<res.data.length;i++){
                            let obj={};
                            obj.label=res.data[i];
                            obj.value=res.data[i];
                            this.marketList.push(obj);
                        }                      
                    }                
                })
        },
        //查询指令市场
        selectdicMarket(){
            this.$httpGet(`/bondBid/selectStockMarket?lIssueCnt=${this.lIssueCnt}&vcScode=${this.selectedVscode}&vcCode=${this.vcCode}`)
                .then((res) => {            
                    if(res.status===200 && res.data){  
                        this.dataAdjMarket=res.data;
                    }                
                })
        },
        //查询债券列表树
        selectBondList(){
            this.$httpGet(`/bondBid/selectBondInfos?vcSname=${this.bondshortname}`)
                .then((res) => {   
                    var data = res.data;
                    
                    if(data.length==0){
                        this.detailData=[];
                        this.bondDetail={
                            vcCreditRating:'',
                            vcRatingOrgan:'',
                            vcCreditRatingTk:'',
                            vcRatingOrganTk:'',
                            vcPrimaryRating:'',
                            vcPoolname:'',
                            vcStarLevel:'',
                            vcAdviceRate:'',
                            vcFloorPrice:'',
                            lOutLowestPrice:''
                        };
                        this.mtainData=[];
                        this.mtainSumData=[
                            {
                                mtain1:'汇总',
                                mtain2:0,
                                mtain3:0,
                                mtain4:'',
                                mtain5:0,
                                mtain6:'',
                                mtain7:'',
                                lotAmountDispatch:0,
                                noLotAmountDispatch:0,
                                addLotAmountDispatch:0,
                                noAddLotAmountDispatch:0
                            }
                        ];
                        this.resultData=[];
                        this.resultDataBank=[];
                        this.resultDataShang=[];
                        this.resultDataShen=[];
                        this.bondlist=res.data;
                    }else if(data.length > 0 ){
                        data[0].expand = true;
                        data[0].children[0].selected = true;                        

                        this.vcCode=data[0].children[0].vcCode;
                        this.lAddCount=data[0].children[0].lAddCount;
                        this.lIssueCnt=data[0].children[0].lIssueCnt;
                        this.selectedbond=data[0].children[0].title;
                        this.cIsCheckCredit=data[0].children[0].cIsCheckCredit;

                        this.bondlist=res.data;

                        this.getTableHeader();
                        this.selectBondIssueInfo();
                        this.selectWinBidResultMtain();
                        this.selectWinBidResult();
                        this.selectBondLeft();
                        this.getBondDetailedInfo();   
                    }else{
                        this.bondlist=res.data;
                    }
                })
        },
        //查询债券发行信息
        selectBondIssueInfo(){
            this.detailLoading=true;
            this.$httpGet(`/bondBid/selectBondIssueInfos?lIssueCnt=${this.lIssueCnt}&vcCode=${this.vcCode}`)
                .then((res) => {            
                    if(res.status===200 && res.data){
                        this.detailData=res.data;
                        this.detailLoading=false;
                    }                
                })
        },
        //查询中标结果维护
        selectWinBidResultMtain(){
            //this.mtainLoading=true;
            this.$httpGet(`/bondBid/selectBondBiddingResult?lIssueCnt=${this.lIssueCnt}&vcCode=${this.vcCode}`)
                .then((res) => {            
                    if(res.status===200){
                        this.mtainData=res.data;
                        //this.mtainLoading=false;
                        //this._calcBidSum();
                    }                
                })
        },
        //查询投标决议中标结果
        selectWinBidResult(num){
            this.dicFundType=this.dicFundType==undefined?'':this.dicFundType;
            this.dicManager=this.dicManager==undefined?'':this.dicManager;
            this.resultLoading=true;
            this.$httpGet(`/bondBid/selectTenderDecisionResult?lIssueCnt=${this.lIssueCnt}&addCount=${this.lAddCount}&vcCode=${this.vcCode}&dicFund=${this.dicFundType}&dicManager=${this.dicManager}&state=${this.state}`)
                .then((res) => {            
                    if(res.status===200 && res.data){
                        //根据搜索条件，切换显示隐藏
                        if(num){
                            this.allTableShow=true;
                            this.bankTableShow=false;
                            this.shenTableShow=false;
                        }
                        this.resultLoading=false;
                        this.resultData=res.data;

                        
                        this.resultDataShang=this.resultData.filter(item=>item.vcMarketName==='上交所A');
                        this.resultDataBank=this.resultData.filter(item=>item.vcMarketName==='银行间');
                        this.resultDataShen=this.resultData.filter(item=>item.vcMarketName==='深交所A');
                        // this.filterData=res.data;
                        //筛选选中项
                        let selectedArr=[];
                        this.resultData.forEach((item)=>{
                            //设置单元格可编辑样式
                            if(this.lAddCount==0){
                                if(item.cIsModify==1){
                                    item.cellClassName={enLotAmountModify:'editable-td-class'}
                                }
                            }else if(this.lAddCount>0){
                                if(item.cIsModify==1){
                                    item.cellClassName={lAddLotAllot:'editable-td-class'}
                                }
                            }
                            if(item._checked===true){
                                selectedArr.push(item);
                            }
                        })
                        this.selectedResults=selectedArr;
                    }                
                })
        },
        //查询债券剩余授信额度和个券集中度
        selectBondLeft(){
            this.$httpGet(`/bondBid/selectBondInformation?lIssueCnt=${this.lIssueCnt}&vcCode=${this.vcCode}`)
                .then((res) => {            
                    if(res.status===200 && res.data){
                        this.checkdata.enConcentraLimit=res.data[0].enConcentraLimit;
                        this.checkdata.restCredit=res.data[0].restCredit;
                        this.checkdata.issueAmountAct=res.data[0].issueAmountAct;
                    }                
                })
        },
        //高亮“中标结果维护”对“投标决议中标结果”进行筛选
        highLightMtainTable(row,oldRow){
            //取消“投标决议中标结果”高亮
            this.selectedStockid='';
            this.$refs.allTable.clearCurrentRow();
            this.$refs.bankTable.clearCurrentRow();
            this.$refs.shenTable.clearCurrentRow();
            this.$refs.shangTable.clearCurrentRow();
             //点击“编辑中标量”判空使用
            this.selectedVscode=row.vcScode;
            this.selectedMtainRow=row;
            //"投标决议中标结果"表格过滤
            //this.resultData=this.filterData.filter(item=>row.vcMarketName===item.vcMarketName);
            //根据点击市场进行‘投标决议中标结果’切换
            console.log(row);
            if(row.vcMarketName.indexOf('银行间')>-1){
                // this.resultDataBank=this.filterData.filter(item=>item.vcMarketName==='银行间');
                this.resultDataBank=this.resultData.filter(item=>item.vcMarketName==='银行间');
                this.bankTableShow=true;
                this.allTableShow=false;
                this.shenTableShow=false;
                this.shangTableShow=false;
            }else if(row.vcMarketName.indexOf('深交所')>-1){
                this.resultDataShen=this.resultData.filter(item=>item.vcMarketName==='深交所');
                this.shenTableShow=true;
                this.allTableShow=false;
                this.bankTableShow=false;
                this.shangTableShow=false;
            }else if(row.vcMarketName.indexOf('上交所')>-1){
                this.resultDataShang=this.resultData.filter(item=>item.vcMarketName==='上交所');
                this.shangTableShow=true;
                this.allTableShow=false;
                this.bankTableShow=false;
                this.shenTableShow=false;
            }
        },
        //编辑中标量
        editBidAmount(){
            if(this.selectedVscode!==''&& this.selectedVscode!==null && this.selectedVscode!==undefined){
                this.modalShow=true;            
                this.modalTitle='编辑中标量';
                this.bidResultMtain.totalAmount=this.selectedMtainRow.enLotTotalAmount;
                this.bidResultMtain.addTotalAmount=this.selectedMtainRow.enLotAddTotalAmount;
                this.bidResultMtain.primarySecondary=this.selectedMtainRow.cPrimaryOrSecondary;
                this.bidResultMtain.vcScode=this.selectedMtainRow.vcScode;
                console.log(this.bidResultMtain.primarySecondary);
            }else{
                this.$Message.warning("请选中一行数据进行编辑");
            }
        },
        //编辑中标价格
        editBidPrice(){            
            this.$httpGet(`/bondBid/selectLotPrice?lIssueCnt=${this.lIssueCnt}&vcCode=${this.vcCode}`)
                    .then((res) => {   
                        console.log(res.data);
                        //this.bidPriceForm.bidPrice
                        if(res.status===200){                       
                            this.modalShow=true;            
                            this.modalTitle='编辑中标价格';
                            this.bidPriceForm.bidPrice=res.data;
                        }else{
                            this.$Message.warning('该债券无中标价格');
                        }                         
                    })

        },
        //自动分配
        autoDis(num){  
            this.autoDisLoading=true;
            if(num=='define'){
                this.defineBtnLoading=true;
                this.modalShow=true;
            }
            if(this.vcCode!=='' && this.vcCode!==undefined && this.vcCode!==null){
                this.$httpGet(`/bondBid/automaticallyAssigned?lIssueCnt=${this.lIssueCnt}&addCount=${this.lAddCount}&vcCode=${this.vcCode}`)
                    .then((res) => {            
                        if(res.status===200 && res.data.length>0){                       
                            this.$Message.success('自动分配成功');
                            this.autoDisLoading=false;
                            if(num=='define'){
                                //this.selectWinBidResult();
                                this.defineBtnLoading=false;
                                this.modalShow=false;
                            }
                            //显示全部市场数据
                            this.allTableShow=true;
                            this.bankTableShow=false;
                            this.shenTableShow=false;

                            this.resultData=res.data;
                            this.filterData=res.data;
                            this.state=1;
                            //筛选选中项
                            let selectedArr=[];
                            this.resultData.forEach((item)=>{
                                //设置单元格可编辑样式
                                if(this.lAddCount==0){
                                    if(item.cIsModify==1){
                                        item.cellClassName={enLotAmountModify:'editable-td-class'}
                                    }
                                }else if(this.lAddCount>0){
                                    if(item.cIsModify==1){
                                        item.cellClassName={lAddLotAllot:'editable-td-class'}
                                    }
                                }
                                if(item._checked===true){
                                    selectedArr.push(item);
                                }
                            })
                            this.selectedResults=selectedArr;
                            this.selectedVscode='';
                        }else{
                            this.$Message.warning(res.data.data);
                            this.autoDisLoading=false;
                        }                         
                    })
            }else{
                this.$Message.warning('请选择债券');
            }
        },
        //启动追加流程
        startAddFlow(){
            // if(this.selectedResults.length==0){
            //     this.$Message.warning('请选择数据');
            // }else{
            this.$Modal.confirm({
                title: '是否继续启动追加流程？',
                content: '',
                loading: true,
                onOk: () => {
                    let flag=false;
                    this.mtainData.forEach((item)=>{
                        if(this.lAddCount===0 && item.noLotAmountDispatch>0){
                            flag=true;
                        }else if(this.lAddCount>0 && item.noAddLotAmountDispatch>0){
                            flag=true;
                        }               
                    })
                    if(flag){
                        this.$Message.warning("中标量未分配完毕");
                    }else{
                        let list=[];
                        for(let i=0;i<this.selectedResults.length;i++){                    
                            if(this.lAddCount===0){
                                let obj={};
                                obj.taskId=this.selectedResults[i].taskId;
                                obj.stockId=this.selectedResults[i].stockId;
                                obj.enLotAmountDispatch=this.selectedResults[i].enLotAmountDispatch;
                                obj.enLotAmountModify=this.selectedResults[i].enLotAmountModify;
                                obj.primaryOrSecondary=this.selectedResults[i].primaryOrSecondary;
                                obj.id=this.selectedResults[i].id;
                                obj.vcScode=this.selectedResults[i].vcScode;
                                list.push(obj);
                            }else{
                                let obj={};
                                obj.taskId=this.selectedResults[i].taskId;
                                obj.stockId=this.selectedResults[i].stockId;
                                obj.lAddLot=this.selectedResults[i].lAddLot;
                                obj.lAddLotAllot=this.selectedResults[i].lAddLotAllot;
                                obj.vcScode=this.selectedResults[i].vcScode;
                                list.push(obj);
                            }                    
                        } 
                        this.$httpPost('/bondBid/startAddProcess',{vcCode:this.vcCode,addCount:this.lAddCount,list:list,lIssueCnt:this.lIssueCnt})
                            .then((res) => {            
                                if(res.status===200 && res.data.actionResult==1){
                                    this.$Message.success(res.data.data);
                                    this.selectWinBidResult();
                                    this.selectBondList();
                                    this.$Modal.remove();
                                }else{
                                    this.$Message.warning(res.data.data);
                                }                
                            })
                    }
                
                }
            })
        },
        //清空筛选
        clearSelect(){
            this.dicFundType='';
            this.dicManager='';
            this.selectWinBidResult();
        },
        //投标决议中标结果(高亮行时)
        highlightRowRes(currentRow,oldCurrentRow){
            console.log(currentRow.stockId);
            //点击“编辑”判空使用
            this.selectedResultRow=currentRow;
            this.selectedStockid=currentRow.stockId;
            
        },
        //选中时(投标决议中标结果)
        selects(selection,row){
            //this.filterData.forEach((item)=>{
            this.resultData.forEach((item)=>{
                if(item.id===row.id && item.stockId===row.stockId){
                    item._checked=true;
                }
            })
        },
        //取消选中时(投标决议中标结果)
        selectCancel(selection,row){
            console.log(row);;
            //this.resultData.forEach((item)=>{
            this.resultData.forEach((item)=>{
                if(item.id===row.id && item.stockId===row.stockId){
                    item._checked=false;
                }
            })
        },
        //选项改变时(投标决议中标结果)
        selectChange(selection){
            this.selectedResults=selection;
        },
        //编辑(首轮投标决议中标结果)
        editBidResult(){
            if(this.selectedStockid!==''&& this.selectedStockid!==null && this.selectedStockid!==undefined){
                this.modalShow=true;            
                if(this.lAddCount===0){
                    this.modalTitle="编辑首轮";
                    this.firEditForm.stockId=this.selectedResultRow.stockId;
                    this.firEditForm.Id=this.selectedResultRow.id;
                    this.firEditForm.primarySecondary=this.selectedResultRow.primaryOrSecondary;
                    this.firEditForm.totalAmount=this.selectedResultRow.enLotAmountModify;
                    this.firEditForm.vcRemarks=this.selectedResultRow.vcRemarks;
                }else if(this.lAddCount>0){
                    this.modalTitle="编辑次轮";
                    this.secEditForm.stockId=this.selectedResultRow.stockId;
                    this.secEditForm.primarySecondary=this.selectedResultRow.primaryOrSecondary;
                    this.secEditForm.lAddLotAllot=this.selectedResultRow.lAddLotAllot;
                    this.secEditForm.vcRemarks=this.selectedResultRow.vcRemarks;
                }
            }else{
                this.$Message.warning("请选中一行数据进行编辑");
            }
        },
        //调整市场
        adjMarket(){
            if(this.selectedVscode===''||this.selectedVscode===null||this.selectedVscode===undefined){
                this.$Message.warning("请选中标结果维护数据");
            }else{
                this.modalShow=true;
                this.modalTitle="调整市场";            
                this.selectdicMarket();
                this.selectdicMarketList();
            }
        },
        //确认中标
        confirmBidResult(){            
            if(this.selectedResults.length==0){
                this.$Message.warning('请选择数据');
            }else{
                this.$Modal.confirm({
                    title: '是否继续确认中标？',
                    content: '',
                    loading: true,
                    onOk: () => {
                        let flag=false;
                        this.mtainData.forEach((item)=>{
                            if(this.lAddCount===0 && item.noLotAmountDispatch>0){
                                flag=true;
                            }else if(this.lAddCount>0 && item.noAddLotAmountDispatch>0){
                                flag=true;
                            }               
                        })
                        if(flag){
                            this.$Message.warning("中标量未分配完毕");
                        }else{
                            let list=[];
                            for(let i=0;i<this.selectedResults.length;i++){                    
                                if(this.lAddCount===0){
                                    let obj={};
                                    obj.taskId=this.selectedResults[i].taskId;
                                    obj.stockId=this.selectedResults[i].stockId;
                                    obj.enLotAmountDispatch=this.selectedResults[i].enLotAmountDispatch;
                                    obj.enLotAmountModify=this.selectedResults[i].enLotAmountModify;
                                    obj.primaryOrSecondary=this.selectedResults[i].primaryOrSecondary;
                                    obj.id=this.selectedResults[i].id;
                                    obj.vcScode=this.selectedResults[i].vcScode;
                                    list.push(obj);
                                }else{
                                    let obj={};
                                    obj.taskId=this.selectedResults[i].taskId;
                                    obj.stockId=this.selectedResults[i].stockId;
                                    obj.lAddLot=this.selectedResults[i].lAddLot;
                                    obj.lAddLotAllot=this.selectedResults[i].lAddLotAllot;
                                    obj.primaryOrSecondary=this.selectedResults[i].primaryOrSecondary;
                                    obj.vcScode=this.selectedResults[i].vcScode;
                                    list.push(obj);
                                }                    
                            } 
                            this.bidBtnLoading=true;
                            this.$httpPost('/bondBid/confirmTheBid',{vcCode:this.vcCode,addCount:this.lAddCount,lIssueCnt:this.lIssueCnt,list:list})
                                .then((res) => {            
                                    if(res.status===200 && res.data.actionResult==1){
                                        this.$Message.success(res.data.data);
                                        this.selectWinBidResult();
                                        this.selectBondList();
                                        this.bidBtnLoading=false;
                                        this.$Modal.remove();
                                    }else{
                                        this.$Message.warning(res.data.data);
                                        this.bidBtnLoading=false;
                                    }                
                                })
                        }
                    }
                });
            }                        
        },
    },
     components:{
        Refresh
    }
}
</script>
<style scoped>
.table-footer >>> .ivu-table-footer {
    height: 40px!important;
    line-height: 40px!important;
}
/*弹框中样式*/
.modal-wraper >>> .ivu-select-dropdown .ivu-select-item,.modal-wraper >>> .ivu-select-placeholder{
    text-align:left;
}
/*left-container外层样式*/
.tree-wrapper{
    height:calc(100vh - 72px)!important;
}
.bond-info{
    display: flex;
}
.bond-info >>> .left-container{
    width: 200px;
}
.right-container{
    width:calc(100% - 205px);
    margin-left:5px; 
} 
/*债券详情信息*/
.bond-detail{
    color: #FFEC8B;
    margin-left: 5px;
}
.bond-detail.card-bg p{
    margin-bottom: 2px;
}
.bond-detail p{
    display: inline-block;
    width: 130px;
}
.bond-detail b{
    font-weight: normal;
    display: inline-block;
    width:50px;
    display:inline-block;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    vertical-align: middle;
    margin-top:-3px;
}
.bond-detail span{
    display: inline-block;
    width:80px;
    line-height: 20px;
    text-align: right;
    padding-right:3px;
    color: #fff;
}
.detail-content{
    height:calc(100% - 30px);
    margin-top:5px;
}
/*底部表格行样式*/
.bottom-height{
    height:calc(100vh - 406px)!important;
}
.result-wrapper{
    height:calc(100% - 30px);
}
.result-wrapper .ivu-table-wrapper{   
    height: 100%;
}
.result-wrapper .ivu-table{
    height:calc(100% - 30px);
}
.result-wrapper .ivu-table .ivu-table-tip{
    height:calc(100% - 30px)!important;
} 
.result-wrapper >>> .ivu-table .ivu-table-body{
    height:calc(100% - 40px);
}
/*flex布局*/
.dis-flex>div:nth-child(1){
    flex:1;
}
.dis-flex>div.childone{
    width: calc(100% - 280px);
}
.dis-flex:nth-child(1)>div:nth-child(2){
    width:280px;
}

.dis-flex:nth-child(2)>div{
    width: 200px;
}

.wid420{
    width:calc(100% - 30px);
}
.marginLeft15{
    margin-left:-15px!important;
}

.ivu-form>>>.ivu-form-item-error-tip{
    padding-left:10px!important;
}

</style>


